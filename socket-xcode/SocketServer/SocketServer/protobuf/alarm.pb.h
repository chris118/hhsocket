// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: alarm.proto

#ifndef PROTOBUF_alarm_2eproto__INCLUDED
#define PROTOBUF_alarm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_alarm_2eproto();
void protobuf_AssignDesc_alarm_2eproto();
void protobuf_ShutdownFile_alarm_2eproto();

class AlarmInfo;

// ===================================================================

class AlarmInfo : public ::google::protobuf::Message {
 public:
  AlarmInfo();
  virtual ~AlarmInfo();

  AlarmInfo(const AlarmInfo& from);

  inline AlarmInfo& operator=(const AlarmInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmInfo& default_instance();

  void Swap(AlarmInfo* other);

  // implements Message ----------------------------------------------

  AlarmInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmInfo& from);
  void MergeFrom(const AlarmInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 obj_type = 2;
  inline bool has_obj_type() const;
  inline void clear_obj_type();
  static const int kObjTypeFieldNumber = 2;
  inline ::google::protobuf::int32 obj_type() const;
  inline void set_obj_type(::google::protobuf::int32 value);

  // required int32 timestamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  inline ::google::protobuf::int32 timestamp() const;
  inline void set_timestamp(::google::protobuf::int32 value);

  // required int32 x = 4;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 4;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 5;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 5;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // required int32 w = 6;
  inline bool has_w() const;
  inline void clear_w();
  static const int kWFieldNumber = 6;
  inline ::google::protobuf::int32 w() const;
  inline void set_w(::google::protobuf::int32 value);

  // required int32 h = 7;
  inline bool has_h() const;
  inline void clear_h();
  static const int kHFieldNumber = 7;
  inline ::google::protobuf::int32 h() const;
  inline void set_h(::google::protobuf::int32 value);

  // required int32 start_timestamp = 8;
  inline bool has_start_timestamp() const;
  inline void clear_start_timestamp();
  static const int kStartTimestampFieldNumber = 8;
  inline ::google::protobuf::int32 start_timestamp() const;
  inline void set_start_timestamp(::google::protobuf::int32 value);

  // required int32 end_timestamp = 9;
  inline bool has_end_timestamp() const;
  inline void clear_end_timestamp();
  static const int kEndTimestampFieldNumber = 9;
  inline ::google::protobuf::int32 end_timestamp() const;
  inline void set_end_timestamp(::google::protobuf::int32 value);

  // required float credibility = 10;
  inline bool has_credibility() const;
  inline void clear_credibility();
  static const int kCredibilityFieldNumber = 10;
  inline float credibility() const;
  inline void set_credibility(float value);

  // optional bytes src_image = 11;
  inline bool has_src_image() const;
  inline void clear_src_image();
  static const int kSrcImageFieldNumber = 11;
  inline const ::std::string& src_image() const;
  inline void set_src_image(const ::std::string& value);
  inline void set_src_image(const char* value);
  inline void set_src_image(const void* value, size_t size);
  inline ::std::string* mutable_src_image();
  inline ::std::string* release_src_image();
  inline void set_allocated_src_image(::std::string* src_image);

  // optional bytes alarm_pic = 12;
  inline bool has_alarm_pic() const;
  inline void clear_alarm_pic();
  static const int kAlarmPicFieldNumber = 12;
  inline const ::std::string& alarm_pic() const;
  inline void set_alarm_pic(const ::std::string& value);
  inline void set_alarm_pic(const char* value);
  inline void set_alarm_pic(const void* value, size_t size);
  inline ::std::string* mutable_alarm_pic();
  inline ::std::string* release_alarm_pic();
  inline void set_allocated_alarm_pic(::std::string* alarm_pic);

  // optional bytes alarm_vid = 13;
  inline bool has_alarm_vid() const;
  inline void clear_alarm_vid();
  static const int kAlarmVidFieldNumber = 13;
  inline const ::std::string& alarm_vid() const;
  inline void set_alarm_vid(const ::std::string& value);
  inline void set_alarm_vid(const char* value);
  inline void set_alarm_vid(const void* value, size_t size);
  inline ::std::string* mutable_alarm_vid();
  inline ::std::string* release_alarm_vid();
  inline void set_allocated_alarm_vid(::std::string* alarm_vid);

  // required int32 image_width = 14;
  inline bool has_image_width() const;
  inline void clear_image_width();
  static const int kImageWidthFieldNumber = 14;
  inline ::google::protobuf::int32 image_width() const;
  inline void set_image_width(::google::protobuf::int32 value);

  // required int32 image_height = 15;
  inline bool has_image_height() const;
  inline void clear_image_height();
  static const int kImageHeightFieldNumber = 15;
  inline ::google::protobuf::int32 image_height() const;
  inline void set_image_height(::google::protobuf::int32 value);

  // required int32 image_id = 16;
  inline bool has_image_id() const;
  inline void clear_image_id();
  static const int kImageIdFieldNumber = 16;
  inline ::google::protobuf::int32 image_id() const;
  inline void set_image_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AlarmInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_obj_type();
  inline void clear_has_obj_type();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_w();
  inline void clear_has_w();
  inline void set_has_h();
  inline void clear_has_h();
  inline void set_has_start_timestamp();
  inline void clear_has_start_timestamp();
  inline void set_has_end_timestamp();
  inline void clear_has_end_timestamp();
  inline void set_has_credibility();
  inline void clear_has_credibility();
  inline void set_has_src_image();
  inline void clear_has_src_image();
  inline void set_has_alarm_pic();
  inline void clear_has_alarm_pic();
  inline void set_has_alarm_vid();
  inline void clear_has_alarm_vid();
  inline void set_has_image_width();
  inline void clear_has_image_width();
  inline void set_has_image_height();
  inline void clear_has_image_height();
  inline void set_has_image_id();
  inline void clear_has_image_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 obj_type_;
  ::google::protobuf::int32 timestamp_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 w_;
  ::google::protobuf::int32 h_;
  ::google::protobuf::int32 start_timestamp_;
  ::google::protobuf::int32 end_timestamp_;
  float credibility_;
  ::std::string* src_image_;
  ::std::string* alarm_pic_;
  ::std::string* alarm_vid_;
  ::google::protobuf::int32 image_width_;
  ::google::protobuf::int32 image_height_;
  ::google::protobuf::int32 image_id_;
  friend void  protobuf_AddDesc_alarm_2eproto();
  friend void protobuf_AssignDesc_alarm_2eproto();
  friend void protobuf_ShutdownFile_alarm_2eproto();

  void InitAsDefaultInstance();
  static AlarmInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// AlarmInfo

// required int32 id = 1;
inline bool AlarmInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlarmInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlarmInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AlarmInfo::id() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.id)
  return id_;
}
inline void AlarmInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.id)
}

// required int32 obj_type = 2;
inline bool AlarmInfo::has_obj_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmInfo::set_has_obj_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlarmInfo::clear_has_obj_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlarmInfo::clear_obj_type() {
  obj_type_ = 0;
  clear_has_obj_type();
}
inline ::google::protobuf::int32 AlarmInfo::obj_type() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.obj_type)
  return obj_type_;
}
inline void AlarmInfo::set_obj_type(::google::protobuf::int32 value) {
  set_has_obj_type();
  obj_type_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.obj_type)
}

// required int32 timestamp = 3;
inline bool AlarmInfo::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmInfo::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlarmInfo::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlarmInfo::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 AlarmInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.timestamp)
  return timestamp_;
}
inline void AlarmInfo::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.timestamp)
}

// required int32 x = 4;
inline bool AlarmInfo::has_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmInfo::set_has_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlarmInfo::clear_has_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlarmInfo::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 AlarmInfo::x() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.x)
  return x_;
}
inline void AlarmInfo::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.x)
}

// required int32 y = 5;
inline bool AlarmInfo::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmInfo::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlarmInfo::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlarmInfo::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 AlarmInfo::y() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.y)
  return y_;
}
inline void AlarmInfo::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.y)
}

// required int32 w = 6;
inline bool AlarmInfo::has_w() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmInfo::set_has_w() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlarmInfo::clear_has_w() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlarmInfo::clear_w() {
  w_ = 0;
  clear_has_w();
}
inline ::google::protobuf::int32 AlarmInfo::w() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.w)
  return w_;
}
inline void AlarmInfo::set_w(::google::protobuf::int32 value) {
  set_has_w();
  w_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.w)
}

// required int32 h = 7;
inline bool AlarmInfo::has_h() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AlarmInfo::set_has_h() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AlarmInfo::clear_has_h() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AlarmInfo::clear_h() {
  h_ = 0;
  clear_has_h();
}
inline ::google::protobuf::int32 AlarmInfo::h() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.h)
  return h_;
}
inline void AlarmInfo::set_h(::google::protobuf::int32 value) {
  set_has_h();
  h_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.h)
}

// required int32 start_timestamp = 8;
inline bool AlarmInfo::has_start_timestamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AlarmInfo::set_has_start_timestamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AlarmInfo::clear_has_start_timestamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AlarmInfo::clear_start_timestamp() {
  start_timestamp_ = 0;
  clear_has_start_timestamp();
}
inline ::google::protobuf::int32 AlarmInfo::start_timestamp() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.start_timestamp)
  return start_timestamp_;
}
inline void AlarmInfo::set_start_timestamp(::google::protobuf::int32 value) {
  set_has_start_timestamp();
  start_timestamp_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.start_timestamp)
}

// required int32 end_timestamp = 9;
inline bool AlarmInfo::has_end_timestamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AlarmInfo::set_has_end_timestamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AlarmInfo::clear_has_end_timestamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AlarmInfo::clear_end_timestamp() {
  end_timestamp_ = 0;
  clear_has_end_timestamp();
}
inline ::google::protobuf::int32 AlarmInfo::end_timestamp() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.end_timestamp)
  return end_timestamp_;
}
inline void AlarmInfo::set_end_timestamp(::google::protobuf::int32 value) {
  set_has_end_timestamp();
  end_timestamp_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.end_timestamp)
}

// required float credibility = 10;
inline bool AlarmInfo::has_credibility() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AlarmInfo::set_has_credibility() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AlarmInfo::clear_has_credibility() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AlarmInfo::clear_credibility() {
  credibility_ = 0;
  clear_has_credibility();
}
inline float AlarmInfo::credibility() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.credibility)
  return credibility_;
}
inline void AlarmInfo::set_credibility(float value) {
  set_has_credibility();
  credibility_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.credibility)
}

// optional bytes src_image = 11;
inline bool AlarmInfo::has_src_image() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AlarmInfo::set_has_src_image() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AlarmInfo::clear_has_src_image() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AlarmInfo::clear_src_image() {
  if (src_image_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_image_->clear();
  }
  clear_has_src_image();
}
inline const ::std::string& AlarmInfo::src_image() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.src_image)
  return *src_image_;
}
inline void AlarmInfo::set_src_image(const ::std::string& value) {
  set_has_src_image();
  if (src_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_image_ = new ::std::string;
  }
  src_image_->assign(value);
  // @@protoc_insertion_point(field_set:AlarmInfo.src_image)
}
inline void AlarmInfo::set_src_image(const char* value) {
  set_has_src_image();
  if (src_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_image_ = new ::std::string;
  }
  src_image_->assign(value);
  // @@protoc_insertion_point(field_set_char:AlarmInfo.src_image)
}
inline void AlarmInfo::set_src_image(const void* value, size_t size) {
  set_has_src_image();
  if (src_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_image_ = new ::std::string;
  }
  src_image_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AlarmInfo.src_image)
}
inline ::std::string* AlarmInfo::mutable_src_image() {
  set_has_src_image();
  if (src_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    src_image_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:AlarmInfo.src_image)
  return src_image_;
}
inline ::std::string* AlarmInfo::release_src_image() {
  clear_has_src_image();
  if (src_image_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = src_image_;
    src_image_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmInfo::set_allocated_src_image(::std::string* src_image) {
  if (src_image_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete src_image_;
  }
  if (src_image) {
    set_has_src_image();
    src_image_ = src_image;
  } else {
    clear_has_src_image();
    src_image_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:AlarmInfo.src_image)
}

// optional bytes alarm_pic = 12;
inline bool AlarmInfo::has_alarm_pic() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AlarmInfo::set_has_alarm_pic() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AlarmInfo::clear_has_alarm_pic() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AlarmInfo::clear_alarm_pic() {
  if (alarm_pic_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarm_pic_->clear();
  }
  clear_has_alarm_pic();
}
inline const ::std::string& AlarmInfo::alarm_pic() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.alarm_pic)
  return *alarm_pic_;
}
inline void AlarmInfo::set_alarm_pic(const ::std::string& value) {
  set_has_alarm_pic();
  if (alarm_pic_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarm_pic_ = new ::std::string;
  }
  alarm_pic_->assign(value);
  // @@protoc_insertion_point(field_set:AlarmInfo.alarm_pic)
}
inline void AlarmInfo::set_alarm_pic(const char* value) {
  set_has_alarm_pic();
  if (alarm_pic_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarm_pic_ = new ::std::string;
  }
  alarm_pic_->assign(value);
  // @@protoc_insertion_point(field_set_char:AlarmInfo.alarm_pic)
}
inline void AlarmInfo::set_alarm_pic(const void* value, size_t size) {
  set_has_alarm_pic();
  if (alarm_pic_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarm_pic_ = new ::std::string;
  }
  alarm_pic_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AlarmInfo.alarm_pic)
}
inline ::std::string* AlarmInfo::mutable_alarm_pic() {
  set_has_alarm_pic();
  if (alarm_pic_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarm_pic_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:AlarmInfo.alarm_pic)
  return alarm_pic_;
}
inline ::std::string* AlarmInfo::release_alarm_pic() {
  clear_has_alarm_pic();
  if (alarm_pic_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = alarm_pic_;
    alarm_pic_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmInfo::set_allocated_alarm_pic(::std::string* alarm_pic) {
  if (alarm_pic_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete alarm_pic_;
  }
  if (alarm_pic) {
    set_has_alarm_pic();
    alarm_pic_ = alarm_pic;
  } else {
    clear_has_alarm_pic();
    alarm_pic_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:AlarmInfo.alarm_pic)
}

// optional bytes alarm_vid = 13;
inline bool AlarmInfo::has_alarm_vid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AlarmInfo::set_has_alarm_vid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AlarmInfo::clear_has_alarm_vid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AlarmInfo::clear_alarm_vid() {
  if (alarm_vid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarm_vid_->clear();
  }
  clear_has_alarm_vid();
}
inline const ::std::string& AlarmInfo::alarm_vid() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.alarm_vid)
  return *alarm_vid_;
}
inline void AlarmInfo::set_alarm_vid(const ::std::string& value) {
  set_has_alarm_vid();
  if (alarm_vid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarm_vid_ = new ::std::string;
  }
  alarm_vid_->assign(value);
  // @@protoc_insertion_point(field_set:AlarmInfo.alarm_vid)
}
inline void AlarmInfo::set_alarm_vid(const char* value) {
  set_has_alarm_vid();
  if (alarm_vid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarm_vid_ = new ::std::string;
  }
  alarm_vid_->assign(value);
  // @@protoc_insertion_point(field_set_char:AlarmInfo.alarm_vid)
}
inline void AlarmInfo::set_alarm_vid(const void* value, size_t size) {
  set_has_alarm_vid();
  if (alarm_vid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarm_vid_ = new ::std::string;
  }
  alarm_vid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AlarmInfo.alarm_vid)
}
inline ::std::string* AlarmInfo::mutable_alarm_vid() {
  set_has_alarm_vid();
  if (alarm_vid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    alarm_vid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:AlarmInfo.alarm_vid)
  return alarm_vid_;
}
inline ::std::string* AlarmInfo::release_alarm_vid() {
  clear_has_alarm_vid();
  if (alarm_vid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = alarm_vid_;
    alarm_vid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AlarmInfo::set_allocated_alarm_vid(::std::string* alarm_vid) {
  if (alarm_vid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete alarm_vid_;
  }
  if (alarm_vid) {
    set_has_alarm_vid();
    alarm_vid_ = alarm_vid;
  } else {
    clear_has_alarm_vid();
    alarm_vid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:AlarmInfo.alarm_vid)
}

// required int32 image_width = 14;
inline bool AlarmInfo::has_image_width() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AlarmInfo::set_has_image_width() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AlarmInfo::clear_has_image_width() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AlarmInfo::clear_image_width() {
  image_width_ = 0;
  clear_has_image_width();
}
inline ::google::protobuf::int32 AlarmInfo::image_width() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.image_width)
  return image_width_;
}
inline void AlarmInfo::set_image_width(::google::protobuf::int32 value) {
  set_has_image_width();
  image_width_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.image_width)
}

// required int32 image_height = 15;
inline bool AlarmInfo::has_image_height() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AlarmInfo::set_has_image_height() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AlarmInfo::clear_has_image_height() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AlarmInfo::clear_image_height() {
  image_height_ = 0;
  clear_has_image_height();
}
inline ::google::protobuf::int32 AlarmInfo::image_height() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.image_height)
  return image_height_;
}
inline void AlarmInfo::set_image_height(::google::protobuf::int32 value) {
  set_has_image_height();
  image_height_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.image_height)
}

// required int32 image_id = 16;
inline bool AlarmInfo::has_image_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AlarmInfo::set_has_image_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void AlarmInfo::clear_has_image_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void AlarmInfo::clear_image_id() {
  image_id_ = 0;
  clear_has_image_id();
}
inline ::google::protobuf::int32 AlarmInfo::image_id() const {
  // @@protoc_insertion_point(field_get:AlarmInfo.image_id)
  return image_id_;
}
inline void AlarmInfo::set_image_id(::google::protobuf::int32 value) {
  set_has_image_id();
  image_id_ = value;
  // @@protoc_insertion_point(field_set:AlarmInfo.image_id)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_alarm_2eproto__INCLUDED
